@{
    ViewData["Title"] = "Онлайн чат";
}

<style>
    .message {
        margin-bottom: 10px;
        display: flex;
        align-items: flex-start;
    }

    .self {
        justify-content: flex-end;
    }

    .other {
        justify-content: flex-start;
    }

    #chatMessages {
        height: 300px;
        overflow-y: auto;
        padding: 10px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .message {
        display: flex;
        margin-bottom: 8px;
        padding: 5px 10px;
        border-radius: 4px;
        max-width: 70%;
    }

    .message-time {
        font-size: 12px;
        color: #888;
        margin-right: 8px;
    }

    .self {
        margin-left: auto;
        background-color: #d4edda;
        text-align: right;
    }

    .other {
        margin-right: auto;
        background-color: #f8d7da;
        text-align: left;
    }

    /* Центрирование формы на странице */
    #joinChatForm {
        max-width: 400px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-family: Arial, sans-serif;
    }

        #joinChatForm h2 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        /* Стиль для всех меток */
        #joinChatForm label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #555;
        }

        /* Стиль для всех текстовых полей */
        #joinChatForm input[type="text"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

        /* Кнопка */
        #joinChatForm button {
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
        }

            #joinChatForm button:hover {
                background-color: #0056b3;
            }

        /* Для отображения при наведении */
        #joinChatForm input[type="text"]:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }
</style>

<div id="joinChatForm">
    <h2>Онлайн чат</h2>

    <form id="joinForm">
        <label for="userName">Имя пользователя</label>
        <input type="text" id="userName" name="userName" placeholder="Введите ваше имя" required />

        <label for="chatRoom">Название чата</label>
        <input type="text" id="chatRoom" name="chatRoom" placeholder="Введите название чата" required />

        <button type="button" id="joinButton" class="btn btn-primary">Присоединиться</button>
    </form>
</div>

<div id="chatSection" style="display: none;">
    <h1>Онлайн чат</h1>
    <h3 id="chatRoomTitle"></h3>
    <div id="chatMessages" class="border p-4 mb-4" style="height: 300px; overflow-y: auto;"></div>
    <div class="d-flex">
        <input type="text" id="messageInput" class="form-control" placeholder="Введите сообщение" />
        <button id="sendButton" class="btn btn-success ml-2">Отправить</button>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    const joinButton = document.getElementById("joinButton");
    const sendButton = document.getElementById("sendButton");
    const chatSection = document.getElementById("chatSection");
    const chatMessages = document.getElementById("chatMessages");
    const messageInput = document.getElementById("messageInput");
    const chatRoomTitle = document.getElementById("chatRoomTitle");

    let userName = "";
    let chatRoom = "";

    // Присоединение к чату
    joinButton.addEventListener("click", async () => {
        userName = document.getElementById("userName").value;
        chatRoom = document.getElementById("chatRoom").value;

        if (!userName || !chatRoom) {
            alert("Введите имя и название комнаты!");
            return;
        }

        await connection.start().then(async () => {
            console.log("Connected to SignalR");
            await connection.invoke("JoinChat", { userName, chatRoom });
            chatRoomTitle.innerText = `Чат: ${chatRoom}`;
            chatSection.style.display = "block";
            document.getElementById("joinChatForm").style.display = "none";
        }).catch(err => console.error("Error connecting to SignalR:", err));
    });

    // Отправка сообщения
    sendButton.addEventListener("click", async () => {
        const message = messageInput.value;
        if (!message) {
            alert("Введите сообщение!");
            return;
        }

        await connection.invoke("SendMessage", chatRoom, userName, message)
            .then(() => {
                messageInput.value = "";
            })
            .catch(err => console.error("Error sending message:", err));
    });

    // Прием сообщений
    connection.on("ReceiveMessage", (user, message, time) => {
        const msg = document.createElement("div");
        msg.classList.add("message");

        if (user === userName) {
            msg.classList.add("self"); // Класс для своих сообщений
        } else {
            msg.classList.add("other"); // Класс для чужих сообщений
        }

        msg.innerHTML = `
                <div>
                    <span class="message-time">${time}</span>
                    <strong>${user}:</strong>
                    <span>${message}</span>
                </div>
            `;

        chatMessages.appendChild(msg);
        chatMessages.scrollTop = chatMessages.scrollHeight; // Прокрутка вниз
    });
</script>
